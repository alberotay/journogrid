const express = require('express');
const app = express();
const parser = require('rss-parser');
const parserInstance = new parser();


app.use(express.static('public')); // Sirve archivos estáticos desde la carpeta 'public'

app.get('/el-mundo', async (req, res) => {
    try {
        const feed = await parserInstance.parseURL('https://e00-elmundo.uecdn.es/elmundo/rss/portada.xml');
        const items = feed.items.map(item => ({
            title: item.title,
            link: item.link,
            description: item.contentSnippet, // Cambia a item.description si es necesario
            pubDate: item.pubDate,
            source: "El Mundo", // Agrega aquí la fuente
            imageLink: item.enclosure ? item.enclosure.url : null // Cambia según la estructura de la imagen en la fuente
        }));
        res.json({ items });
    } catch (error) {
        console.error(error);
        res.status(500).json({ error: 'Error al obtener las noticias de El Mundo' });
    }
});

app.get('/el-periodico', async (req, res) => {
    try {
        const feed = await parserInstance.parseURL('https://www.elperiodico.com/es/rss/rss_portada.xml');
        const items = feed.items.map(item => ({
            title: item.title,
            link: item.link,
            description: item.contentSnippet, // Cambia a item.description si es necesario
            pubDate: item.pubDate,
            source: "El Periodico", // Agrega aquí la fuente
            imageLink: item.enclosure ? item.enclosure.url : null // Cambia según la estructura de la imagen en la fuente
        }));
        res.json({ items });
    } catch (error) {
        console.error(error);
        res.status(500).json({ error: 'Error al obtener las noticias de El Periódico' });
    }
});

app.listen(3000, () => {
    console.log('Servidor iniciado en el puerto 3000');
});
