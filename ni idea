const express = require('express');
const app = express();
const FeedParser = require('feedparser');
const request = require('request');

app.use(express.static('public')); // Sirve archivos estáticos desde la carpeta 'public'

app.get('/rss', (req, res) => {
    try {
        const elMundoFeed = 'https://e00-elmundo.uecdn.es/elmundo/rss/portada.xml';
        const elPeriodicoFeed = 'https://www.elperiodico.com/es/rss/rss_portada.xml';

        // Función para parsear un feed y devolver los elementos
        const parseFeed = (feedUrl, callback) => {
            const items = [];

            const req = request(feedUrl);
            const feedparser = new FeedParser();

            req.on('error', error => {
                console.error(error);
                callback([]);
            });

            req.on('response', function (res) {
                if (res.statusCode !== 200) {
                    this.emit('error', new Error('Bad status code'));
                } else {
                    this.pipe(feedparser);
                }
            });

            feedparser.on('error', error => {
                console.error(error);
                callback([]);
            });

            feedparser.on('readable', function () {
                const stream = this;
                let item;

                while ((item = stream.read())) {
                    // Aquí es donde se extrae el thumbnail
                    const thumbnailUrl = item['media:thumbnail']['@']['url'];
                    
                    // Luego puedes agregar thumbnailUrl al objeto del artículo
                    item.thumbnailUrl = thumbnailUrl;

                    items.push(item);
                }
            });

            feedparser.on('end', () => {
                callback(items);
            });
        };

        // Parsear ambos feeds y combinar los resultados
        parseFeed(elMundoFeed, elMundoItems => {
            parseFeed(elPeriodicoFeed, elPeriodicoItems => {
                const combinedFeed = {
                    elMundo: elMundoItems,
                    elPeriodico: elPeriodicoItems
                };
                console.log(combinedFeed); // Muestra los items parseados en la consola
                res.json(combinedFeed);
            });
        });
    } catch (error) {
        console.error(error);
        res.status(500).json({ error: 'Error al obtener las noticias' });
    }
});

app.listen(3000, () => {
    console.log('Servidor iniciado en el puerto 3000');
});
